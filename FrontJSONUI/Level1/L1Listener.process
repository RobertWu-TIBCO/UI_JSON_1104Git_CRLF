<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/MobCastleAD1006RemoteReport_JSON/FrontJSONUI/Level1/Schema.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns12="http://xmlns.tibco.com/encodings/mime" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file/v2" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/file">
    <xsd:import namespace="http://www.tibco.com/schemas/MobCastleAD1006RemoteReport_JSON/FrontJSONUI/Level1/Schema.xsd" schemaLocation="/FrontJSONUI/Level1/AllJSONSchema.xsd"/>
    <pd:name>FrontJSONUI/Level1/L1Listener.process</pd:name>
    <pd:startName>GetAllJSON</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetAllJSON">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>68</pd:x>
        <pd:y>161</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>UTF8</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/FrontJSONUI/Level1/JSONUI.sharedhttp</sharedChannel>
            <parsePostData>true</parsePostData>
            <customField>
                <row>
                    <attribute>request</attribute>
                    <attributeType>string</attributeType>
                    <attributeCard>optional</attributeCard>
                </row>
            </customField>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Origin" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="user-agent" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>526</pd:endX>
    <pd:endY>55</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1477401040025</pd:targetNamespace>
    <pd:activity name="JSONResponseToUI">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:description>concat($DynamicCallBaseOnJSON/root/JSONResponse,$NotAllowed/ns:ActivityOutputClass/jsonString)</pd:description>
        <pd:x>342</pd:x>
        <pd:y>57</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>GetAllJSON</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Access-Control-Allow-Origin" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <asciiContent>
                    <xsl:value-of select="concat($DynamicCallBaseOnJSON/pfx:SubEnd/pfx:JSONResponse,$NotAllowed/ns:ActivityOutputClass/jsonString)"/>
                </asciiContent>
                <Headers>
                    <Access-Control-Allow-Origin>
                        <xsl:value-of select="&quot;*&quot;"/>
                    </Access-Control-Allow-Origin>
                </Headers>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="DynamicCallBaseOnJSON">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>187</pd:x>
        <pd:y>58</pd:y>
        <config>
            <processName>/FrontJSONUI/Level2/search.process</processName>
            <processNameXPath>concat(
"/FrontJSONUI/Level2/",
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"search") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/search")) then "search.process" else
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"update") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/update")) then "update.process" else 
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"add") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/add")) then "add.process" else 
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"check") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/check")) then "check.process" else 
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"report_robert") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/report_robert")) then "report_robert.process" else
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"report") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/report")) then "report.process" else 
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"rediscampaign") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/rediscampaign")) then "rediscampaign.process" else 
if(contains($CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation,"BWReport") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/rediscampaign")) then "BWReport.process" else 
"APIv1.process"
)</processNameXPath>
        </config>
        <pd:inputBindings>
            <pfx:AllJSONRequests>
                <pfx:token>
                    <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:token"/>
                </pfx:token>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation">
                    <pfx:operation>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation"/>
                    </pfx:operation>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:tablename">
                    <pfx:tablename>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:tablename"/>
                    </pfx:tablename>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:searchvalue">
                    <pfx:searchvalue>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:searchvalue"/>
                    </pfx:searchvalue>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:offerreportsearch">
                    <pfx:offerreportsearch>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:offerreportsearch"/>
                    </pfx:offerreportsearch>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:nreportsearch">
                    <pfx:nreportsearch>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:nreportsearch"/>
                    </pfx:nreportsearch>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:id">
                    <pfx:id>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:id"/>
                    </pfx:id>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:startdate">
                    <pfx:startdate>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:startdate"/>
                    </pfx:startdate>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:enddate">
                    <pfx:enddate>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:enddate"/>
                    </pfx:enddate>
                </xsl:if>
                <xsl:if test="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:accuracy">
                    <pfx:accuracy>
                        <xsl:value-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:accuracy"/>
                    </pfx:accuracy>
                </xsl:if>
                <xsl:copy-of select="$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:EditArray"/>
            </pfx:AllJSONRequests>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CheckToken">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>158</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx:AllJSONRequests"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <xsl:choose>
                    <xsl:when test="exists($GetAllJSON/ProcessStarterOutput/parameters/request) &#xA;and&#xA;contains($GetAllJSON/ProcessStarterOutput/PostData, &quot;&amp;&quot;)">
                        <jsonString>
                            <xsl:value-of select="substring-after($GetAllJSON/ProcessStarterOutput/PostData, &quot;request=&quot;)"/>
                        </jsonString>
                    </xsl:when>
                    <xsl:when test="exists($GetAllJSON/ProcessStarterOutput/parameters/request)&#xA; and&#xA;not(contains($GetAllJSON/ProcessStarterOutput/PostData, &quot;&amp;&quot;))">
                        <jsonString>
                            <xsl:value-of select="$GetAllJSON/ProcessStarterOutput/parameters/request"/>
                        </jsonString>
                    </xsl:when>
                    <xsl:otherwise>
                        <jsonString>
                            <xsl:value-of select="$GetAllJSON/ProcessStarterOutput/PostData"/>
                        </jsonString>
                    </xsl:otherwise>
                </xsl:choose>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="NotAllowed">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>341</pd:x>
        <pd:y>161</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="responsestatus" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <root>
                    <responsestatus>
                        <xsl:value-of select="&quot;no permission&quot;"/>
                    </responsestatus>
                </root>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendReportCSV">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:description>concat("report is here : &lt;br&gt;", tib:concat-sequence-format($Index/ProcessStarterOutput/parameters/*, "&lt;br&gt; "),"&lt;br&gt; offer query : &lt;br&gt;",$SaveConcat/root/offer,"&lt;br&gt;n query : &lt;br&gt;",$SaveConcat/root/n)

text/csv</pd:description>
        <pd:x>350</pd:x>
        <pd:y>266</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>GetAllJSON</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Access-Control-Allow-Origin" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <Headers>
                    <Access-Control-Allow-Origin>
                        <xsl:value-of select="&quot;*&quot;"/>
                    </Access-Control-Allow-Origin>
                    <Content-Type>
                        <xsl:value-of select="&quot;application/octet-stream&quot;"/>
                    </Content-Type>
                </Headers>
                <ns12:mimeEnvelopeElement>
                    <mimePart>
                        <mimeHeaders>
                            <content-disposition>
                                <xsl:value-of select="concat('attachment; filename=&quot;',$Read-File/ns1:ReadActivityOutputTextClass/fileInfo/fileName,'&quot;')"/>
                            </content-disposition>
                            <content-type>
                                <xsl:value-of select="&quot;application/vnd.ms-excel&quot;"/>
                            </content-type>
                        </mimeHeaders>
                        <fileName>
                            <xsl:value-of select="$Read-File/ns1:ReadActivityOutputTextClass/fileInfo/fullName"/>
                        </fileName>
                    </mimePart>
                </ns12:mimeEnvelopeElement>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Read File">
        <pd:type>com.tibco.plugin.file.FileReadActivity</pd:type>
        <pd:resourceType>ae.activities.FileReadActivity</pd:resourceType>
        <pd:description>read report file and prepar for downloading</pd:description>
        <pd:x>196</pd:x>
        <pd:y>268</pd:y>
        <config>
            <encoding>text</encoding>
        </config>
        <pd:inputBindings>
            <ns2:ReadActivityInputClass>
                <fileName>
                    <xsl:value-of select="concat(&#xA;$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:reportname,&#xA;substring-after($GetAllJSON/ProcessStarterOutput/RequestURI,&quot;reportname=&quot;)&#xA;)"/>
                </fileName>
                <encoding>
                    <xsl:value-of select="&quot;CP936&quot;"/>
                </encoding>
            </ns2:ReadActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="DeleteReport">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>529</pd:x>
        <pd:y>268</pd:y>
        <config>
            <processName>/FrontJSONUI/Level3/Common_DeleteFile.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <fileToDelete>
                    <xsl:value-of select="$Read-File/ns1:ReadActivityOutputTextClass/fileInfo/fullName"/>
                </fileToDelete>
                <fileWaitTime>
                    <xsl:value-of select="20000"/>
                </fileWaitTime>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>672</pd:x>
        <pd:y>268</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Send HTTP Response">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>664</pd:x>
        <pd:y>54</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>GetAllJSON</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Access-Control-Allow-Origin" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <asciiContent>
                    <xsl:value-of select="$errorHandle/ns:ActivityOutputClass/jsonString"/>
                </asciiContent>
                <Headers>
                    <Access-Control-Allow-Origin>
                        <xsl:value-of select="&quot;*&quot;"/>
                    </Access-Control-Allow-Origin>
                    <StatusLine>
                        <xsl:value-of select="&quot;HTTP/1.1 501&quot;"/>
                    </StatusLine>
                </Headers>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="errorHandle">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>670</pd:x>
        <pd:y>153</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="responsestatus" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="error" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="statuscode" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="reason" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <root>
                    <responsestatus>
                        <xsl:value-of select="&quot;server error&quot;"/>
                    </responsestatus>
                    <error>
                        <statuscode>
                            <xsl:value-of select="&quot;601&quot;"/>
                        </statuscode>
                        <reason>
                            <xsl:value-of select="$Catch/exceptiondata/*"/>
                        </reason>
                    </error>
                </root>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SendReportCSV_Chrome">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:description>concat("report is here : &lt;br&gt;", tib:concat-sequence-format($Index/ProcessStarterOutput/parameters/*, "&lt;br&gt; "),"&lt;br&gt; offer query : &lt;br&gt;",$SaveConcat/root/offer,"&lt;br&gt;n query : &lt;br&gt;",$SaveConcat/root/n)

text/csv</pd:description>
        <pd:x>347</pd:x>
        <pd:y>346</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>GetAllJSON</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Access-Control-Allow-Origin" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <asciiContent>
                    <xsl:value-of select="$Read-File/ns1:ReadActivityOutputTextClass/fileContent/textContent"/>
                </asciiContent>
                <Headers>
                    <Access-Control-Allow-Origin>
                        <xsl:value-of select="&quot;*&quot;"/>
                    </Access-Control-Allow-Origin>
                    <Content-Type>
                        <xsl:value-of select="&quot;application/vnd.ms-excel;charset=GB18030&quot;"/>
                    </Content-Type>
                </Headers>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetAllJSON</pd:from>
        <pd:to>CheckToken</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JSONResponseToUI</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>DynamicCallBaseOnJSON</pd:from>
        <pd:to>JSONResponseToUI</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckToken</pd:from>
        <pd:to>DynamicCallBaseOnJSON</pd:to>
        <pd:xpathDescription>valid token</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckToken</pd:from>
        <pd:to>NotAllowed</pd:to>
        <pd:xpathDescription>token not allowed</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:token!="000000"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>NotAllowed</pd:from>
        <pd:to>JSONResponseToUI</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckToken</pd:from>
        <pd:to>Read File</pd:to>
        <pd:xpathDescription>allows a filename passed in via JSON request , only filename is needed in report page. extra JSON request should be sent here to download the file</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:token="000000" and 
contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/downloadreport")
or
$CheckToken/ns:ActivityOutputClass/pfx:AllJSONRequests/pfx:operation="downloadreport"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Read File</pd:from>
        <pd:to>SendReportCSV</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAllJSON</pd:from>
        <pd:to>Read File</pd:to>
        <pd:xpathDescription>allows giving a valid url in report page and click it to hit this transition, no token needed</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($GetAllJSON/ProcessStarterOutput/RequestURI, "/downloadreport") or contains($GetAllJSON/ProcessStarterOutput/RequestURI, "reportname=")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SendReportCSV</pd:from>
        <pd:to>DeleteReport</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>DeleteReport</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>errorHandle</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>errorHandle</pd:from>
        <pd:to>Send HTTP Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Read File</pd:from>
        <pd:to>SendReportCSV_Chrome</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains(lower-case($GetAllJSON/ProcessStarterOutput/Headers/user-agent), "chrome") or contains(lower-case($GetAllJSON/ProcessStarterOutput/Headers/user-agent), "Safari")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SendReportCSV_Chrome</pd:from>
        <pd:to>DeleteReport</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>