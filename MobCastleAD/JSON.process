<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/ParseRS.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/ParseRS.xsd" schemaLocation="/ParseRS.xsd"/>
    <pd:name>MobCastleAD/JSON.process</pd:name>
    <pd:startName>GetFrontRequest</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="GetFrontRequest">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>287</pd:x>
        <pd:y>167</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>ISO8859_1</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/MobCastleAD/9990.sharedhttp</sharedChannel>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>761</pd:endX>
    <pd:endY>162</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1477395326679</pd:targetNamespace>
    <pd:activity name="DynamicSql">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>429</pd:x>
        <pd:y>165</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RenderSearch">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>586</pd:x>
        <pd:y>164</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:unknownResultset"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <xsl:for-each select="$DynamicSql/jdbcGeneralActivityOutput/unknownResultset[1]">
                    <unknownResultset>
                        <xsl:for-each select="row">
                            <row>
                                <xsl:for-each select="column">
                                    <column>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <value>
                                            <xsl:copy-of select="value/@xsi:nil"/>
                                            <xsl:value-of select="value"/>
                                        </value>
                                    </column>
                                </xsl:for-each>
                            </row>
                        </xsl:for-each>
                    </unknownResultset>
                </xsl:for-each>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CheckDynamicSql">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>425</pd:x>
        <pd:y>264</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RenderCheck">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>586</pd:x>
        <pd:y>261</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:unknownResultset"/>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInputClass xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json">
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$CheckDynamicSql/jdbcGeneralActivityOutput/unknownResultset[1]">
                    <unknownResultset>
                        <xsl:for-each select="row">
                            <row>
                                <xsl:for-each select="column">
                                    <column>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <value>
                                            <xsl:copy-of select="value/@xsi:nil"/>
                                            <xsl:value-of select="value"/>
                                        </value>
                                    </column>
                                </xsl:for-each>
                            </row>
                        </xsl:for-each>
                    </unknownResultset>
                </xsl:for-each>
            </ns1:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EditDynamicSql">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>294</pd:x>
        <pd:y>36</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RenderEdit">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>593</pd:x>
        <pd:y>38</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:unknownResultset"/>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInputClass xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json">
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$EditDynamicSql/jdbcGeneralActivityOutput/unknownResultset[1]">
                    <unknownResultset>
                        <xsl:for-each select="row">
                            <row>
                                <xsl:for-each select="column">
                                    <column>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <value>
                                            <xsl:copy-of select="value/@xsi:nil"/>
                                            <xsl:value-of select="value"/>
                                        </value>
                                    </column>
                                </xsl:for-each>
                            </row>
                        </xsl:for-each>
                    </unknownResultset>
                </xsl:for-each>
            </ns1:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EditDynamicSql_Plus">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>467</pd:x>
        <pd:y>36</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UpdateDynamicSql">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>368</pd:x>
        <pd:y>348</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RenderUpdate">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>570</pd:x>
        <pd:y>352</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:unknownResultset"/>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInputClass xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json">
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$DynamicSql/jdbcGeneralActivityOutput/unknownResultset[1]">
                    <unknownResultset>
                        <xsl:for-each select="row">
                            <row>
                                <xsl:for-each select="column">
                                    <column>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <value>
                                            <xsl:copy-of select="value/@xsi:nil"/>
                                            <xsl:value-of select="value"/>
                                        </value>
                                    </column>
                                </xsl:for-each>
                            </row>
                        </xsl:for-each>
                    </unknownResultset>
                </xsl:for-each>
            </ns1:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AddDynamicSql">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>289</pd:x>
        <pd:y>440</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RenderAdd">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>419</pd:x>
        <pd:y>445</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:unknownResultset"/>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInputClass xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json">
                <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$DynamicSql/jdbcGeneralActivityOutput/unknownResultset[1]">
                    <unknownResultset>
                        <xsl:for-each select="row">
                            <row>
                                <xsl:for-each select="column">
                                    <column>
                                        <name>
                                            <xsl:value-of select="name"/>
                                        </name>
                                        <value>
                                            <xsl:copy-of select="value/@xsi:nil"/>
                                            <xsl:value-of select="value"/>
                                        </value>
                                    </column>
                                </xsl:for-each>
                            </row>
                        </xsl:for-each>
                    </unknownResultset>
                </xsl:for-each>
            </ns1:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AddDynamicSql_Plus">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>607</pd:x>
        <pd:y>438</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/0920UpdateTables/MySql.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/all/&quot;)">
                        <statement>
                            <xsl:value-of select="&quot;select * from &quot;"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from offer where offer_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/offer/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser&quot;)">
                        <statement>
                            <xsl:value-of select="concat(&quot;select * from advertiser where advertiser_name like %&quot;,substring-after($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search/advertiser/&quot;),&quot;%&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:when test="">
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:when>
                    <xsl:otherwise>
                        <statement>
                            <xsl:value-of select="contains($GetFrontRequest/ProcessStarterOutput/RequestURI, &quot;search&quot;)"/>
                        </statement>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>GetFrontRequest</pd:from>
        <pd:to>DynamicSql</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($GetFrontRequest/ProcessStarterOutput/RequestURI, "/search")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>DynamicSql</pd:from>
        <pd:to>RenderSearch</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderSearch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFrontRequest</pd:from>
        <pd:to>CheckDynamicSql</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($GetFrontRequest/ProcessStarterOutput/RequestURI, "/check")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>CheckDynamicSql</pd:from>
        <pd:to>RenderCheck</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderCheck</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFrontRequest</pd:from>
        <pd:to>EditDynamicSql</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($GetFrontRequest/ProcessStarterOutput/RequestURI, "/edit")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>EditDynamicSql</pd:from>
        <pd:to>EditDynamicSql_Plus</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EditDynamicSql_Plus</pd:from>
        <pd:to>RenderEdit</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderEdit</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFrontRequest</pd:from>
        <pd:to>UpdateDynamicSql</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($GetFrontRequest/ProcessStarterOutput/RequestURI, "/update")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>UpdateDynamicSql</pd:from>
        <pd:to>RenderUpdate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderUpdate</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFrontRequest</pd:from>
        <pd:to>AddDynamicSql</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AddDynamicSql</pd:from>
        <pd:to>RenderAdd</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderAdd</pd:from>
        <pd:to>AddDynamicSql_Plus</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AddDynamicSql_Plus</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>