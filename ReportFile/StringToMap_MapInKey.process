<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/MobCastleAD1006RemoteReport_JSON/FrontJSONUI/Level1/Schema.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json">
    <xsd:import namespace="http://www.tibco.com/schemas/MobCastleAD1006RemoteReport_JSON/FrontJSONUI/Level1/Schema.xsd" schemaLocation="/FrontJSONUI/Level1/AllJSONSchema.xsd"/>
    <pd:name>ReportFile/StringToMap_MapInKey.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="day" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="hour" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="concolumn" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="groupby" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="keys" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="startdate" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="enddate" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="accuracy" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="mergefile" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="jsontime" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>57</pd:startX>
    <pd:startY>48</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:for-each select="$AllKeyAllMap/AccumulatedOutput/root">
                <pfx:reportline>
                    <xsl:if test="time">
                        <pfx:time>
                            <xsl:value-of select="time"/>
                        </pfx:time>
                    </xsl:if>
                    <xsl:if test="offer">
                        <pfx:offer_query>
                            <xsl:value-of select="offer"/>
                        </pfx:offer_query>
                    </xsl:if>
                    <pfx:offer_link>
                        <xsl:value-of select="concat(&#xA;if ($_globalVariables/ns:GlobalVariables/JSONUI/DomainName!=&quot;&quot;) then $_globalVariables/ns:GlobalVariables/JSONUI/DomainName else &quot;http://www.91mobcastle.com&quot;,&#xA;&quot;/detail/&quot;,&#xA;&quot;offer&quot;,&#xA;&quot;-detail.html?id=&quot;,&#xA;current()/offerid&#xA;)"/>
                    </pfx:offer_link>
                    <xsl:if test="n">
                        <pfx:n_query>
                            <xsl:value-of select="n"/>
                        </pfx:n_query>
                    </xsl:if>
                    <pfx:n_link>
                        <xsl:value-of select="concat(&#xA;if ($_globalVariables/ns:GlobalVariables/JSONUI/DomainName!=&quot;&quot;) then $_globalVariables/ns:GlobalVariables/JSONUI/DomainName else &quot;http://www.91mobcastle.com&quot;,&#xA;&quot;/detail/&quot;,&#xA;&quot;n&quot;,&#xA;&quot;-detail.html?id=&quot;,&#xA;current()/nid&#xA;)"/>
                    </pfx:n_link>
                    <xsl:if test="click">
                        <pfx:click>
                            <xsl:value-of select="click"/>
                        </pfx:click>
                    </xsl:if>
                    <xsl:if test="normal">
                        <pfx:normal>
                            <xsl:value-of select="normal"/>
                        </pfx:normal>
                    </xsl:if>
                    <pfx:conversionrate>
                        <xsl:value-of select="if (click&lt;&#xA;(&#xA;normal +&#xA;rm +&#xA;dup&#xA;)&#xA;) then &quot;100.0000%&quot; else &#xA;concat(&#xA;tib:round-fraction(conver*100&#xA;,4),&#xA;&quot;%&quot;)"/>
                    </pfx:conversionrate>
                    <xsl:if test="campaign_extendtype">
                        <pfx:campaign_expendtype>
                            <xsl:value-of select="campaign_extendtype"/>
                        </pfx:campaign_expendtype>
                    </xsl:if>
                    <xsl:if test="out_price">
                        <pfx:out_price>
                            <xsl:value-of select="out_price"/>
                        </pfx:out_price>
                    </xsl:if>
                    <xsl:if test="offer_earningtype">
                        <pfx:offer_earningtype>
                            <xsl:value-of select="offer_earningtype"/>
                        </pfx:offer_earningtype>
                    </xsl:if>
                    <xsl:if test="in_price">
                        <pfx:in_price>
                            <xsl:value-of select="in_price"/>
                        </pfx:in_price>
                    </xsl:if>
                    <xsl:if test="rm">
                        <pfx:rm>
                            <xsl:value-of select="rm"/>
                        </pfx:rm>
                    </xsl:if>
                    <xsl:if test="dup">
                        <pfx:duplicated>
                            <xsl:value-of select="dup"/>
                        </pfx:duplicated>
                    </xsl:if>
                    <xsl:if test="allcon">
                        <pfx:allcon>
                            <xsl:value-of select="allcon"/>
                        </pfx:allcon>
                    </xsl:if>
                    <pfx:allcon_conversionrate>
                        <xsl:value-of select="if (click&lt;&#xA;(&#xA;normal +&#xA;rm +&#xA;dup&#xA;)&#xA;) then &quot;100.0000%&quot; else &#xA;concat(&#xA;tib:round-fraction(allcon_converrate*100&#xA;,4),&#xA;&quot;%&quot;)"/>
                    </pfx:allcon_conversionrate>
                </pfx:reportline>
            </xsl:for-each>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:reportline" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>927</pd:endX>
    <pd:endY>186</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1483599437572</pd:targetNamespace>
    <pd:activity name="ParseClickReport">
        <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
        <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
        <pd:x>56</pd:x>
        <pd:y>194</pd:y>
        <config>
            <InputType>File</InputType>
            <Encoding>UTF8</Encoding>
            <SpecifyStartRecord>false</SpecifyStartRecord>
            <SkipBlankLines>false</SkipBlankLines>
            <ParseSharedConfig>/ReportFile/HourReport.sharedparse</ParseSharedConfig>
        </config>
        <pd:inputBindings>
            <Input>
                <fileName>
                    <xsl:value-of select="$Start/root/mergefile"/>
                </fileName>
                <noOfRecords>
                    <xsl:value-of select="1000"/>
                </noOfRecords>
            </Input>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Maps">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>119</pd:x>
        <pd:y>81</pd:y>
        <pd:width>190</pd:width>
        <pd:height>198</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$ParseClickReport/Output/Rows/root</pd:over>
            <pd:iterationElementSlot>mapele</pd:iterationElementSlot>
            <pd:indexSlot>map</pd:indexSlot>
            <pd:outSlot>alllmapperkey</pd:outSlot>
            <pd:activityOutputName>StringToMap</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>StringToMap</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>contains( $mapele/root/mapname,
concat(
"m",$Start/root/groupby,"_")
)</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Log</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>StringToMap</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="StringToMap">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:description>if($Start/root/groupby="offer") then
$keysele/keys
else
substring-before($keysele/keys, "-")


if($Start/root/groupby="n") then
$keysele/keys
else
substring-after($keysele/keys, "-")</pd:description>
            <pd:x>209</pd:x>
            <pd:y>141</pd:y>
            <config>
                <fileName>StringToMap_MapInKeyStringToMap</fileName>
                <packageName>ReportFile.StringToMap_MapInKey</packageName>
                <fullsource>package ReportFile.StringToMap_MapInKey;
import java.util.*;
import java.io.*;
@SuppressWarnings("unchecked")
public class StringToMap_MapInKeyStringToMap{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String mapname = "";
	protected String mapvalue = "";
	protected String[] keys = null;
	protected String offer = "";
	protected String n = "";
	protected String conver = "";
	protected int vals = 0;
	protected Object map2 = null;
	public String getmapname() {
		return mapname;
	}
	public void setmapname(String val) {
		mapname = val;
	}
	public String getmapvalue() {
		return mapvalue;
	}
	public void setmapvalue(String val) {
		mapvalue = val;
	}
	public String[] getkeys() {
		return keys;
	}
	public void setkeys(String[] val) {
		keys = val;
	}
	public String getoffer() {
		return offer;
	}
	public void setoffer(String val) {
		offer = val;
	}
	public String getn() {
		return n;
	}
	public void setn(String val) {
		n = val;
	}
	public String getconver() {
		return conver;
	}
	public void setconver(String val) {
		conver = val;
	}
	public int getvals() {
		return vals;
	}
	public void setvals(int val) {
		vals = val;
	}
	public Object getmap2() {
		return map2;
	}
	public void setmap2(Object val) {
		map2 = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public StringToMap_MapInKeyStringToMap() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String mapname
	In  : String mapvalue
	In  : String[] keys
	In  : String offer
	In  : String n
	Out : String keys
	Out : String offer
	Out : String n
	Out : String conver
	Out : int vals
	Out : Object map2
* Available Variables: DO NOT MODIFY *****/

Map&lt;String, String&gt; StrMap = new HashMap&lt;String, String&gt;();
Map&lt;String, String&gt; StrMap2 = new HashMap&lt;String, String&gt;();
StrMap = mapStringToMap(mapvalue);
String keytmp="";
String valtmp= "";
int index=-1;
Arrays.sort(keys);
Iterator&lt;String&gt; iterator= StrMap.keySet().iterator();
while(iterator.hasNext()){
keytmp=(String)iterator.next();
index=Arrays.binarySearch(keys,keytmp);
	if(index&gt;=0) {
valtmp=(String)StrMap.get(keytmp);
//vals=Integer.parseInt(valtmp);
StrMap2.put(keytmp,valtmp);
}
} 
map2=StrMap2;
}

public static Map&lt;String, String&gt; mapStringToMap(String str) {
		str = str.substring(1, str.length() - 1);
		String[] strs = str.split(", ");
		Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
		for (String string : strs) {
			String key = string.split("=")[0];
			
	        try {
				String value = string.split("=")[1];
				map.put(key, value);
				
			} catch (Exception e) {
				continue;
			}
		}
		return map;
	}

}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>mapname</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>mapvalue</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>keys</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>repeating</fieldRequired>
                    </row>
                    <row>
                        <fieldName>offer</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>n</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>keys</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>offer</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>n</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>conver</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>vals</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>map2</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>StringToMap_MapInKeyStringToMap</name>
                        <byteCode>yv66vgAAADQAjwkAHQBWCQAdAFcJAB0AWAkAHQBZCQAdAFoJAB0AWwkAHQBcCQAdAF0KAB4AXggAXwcAYAoACwBeCgAdAGEKAGIAYwsAZABlCwBmAGcLAGgAaQsAaABqBwBrCgBiAGwLAGQAbQsAZABuCgATAG8KABMAcAgAcQoAEwByCABzBwB0BwB1BwB2AQAHbWFwbmFtZQEAEkxqYXZhL2xhbmcvU3RyaW5nOwEACG1hcHZhbHVlAQAEa2V5cwEAE1tMamF2YS9sYW5nL1N0cmluZzsBAAVvZmZlcgEAAW4BAAZjb252ZXIBAAR2YWxzAQABSQEABG1hcDIBABJMamF2YS9sYW5nL09iamVjdDsBAApnZXRtYXBuYW1lAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAKc2V0bWFwbmFtZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEAC2dldG1hcHZhbHVlAQALc2V0bWFwdmFsdWUBAAdnZXRrZXlzAQAVKClbTGphdmEvbGFuZy9TdHJpbmc7AQAHc2V0a2V5cwEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAhnZXRvZmZlcgEACHNldG9mZmVyAQAEZ2V0bgEABHNldG4BAAlnZXRjb252ZXIBAAlzZXRjb252ZXIBAAdnZXR2YWxzAQADKClJAQAHc2V0dmFscwEABChJKVYBAAdnZXRtYXAyAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAdzZXRtYXAyAQAVKExqYXZhL2xhbmcvT2JqZWN0OylWAQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQANU3RhY2tNYXBUYWJsZQcAdQcAdwcAawcAeAEACkV4Y2VwdGlvbnMBAA5tYXBTdHJpbmdUb01hcAEAIyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9NYXA7BwAjBwB0AQAJU2lnbmF0dXJlAQBJKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS91dGlsL01hcDxMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZzs+OwEAClNvdXJjZUZpbGUBACRTdHJpbmdUb01hcF9NYXBJbktleVN0cmluZ1RvTWFwLmphdmEMAB8AIAwAIQAgDAAiACMMACQAIAwAJQAgDAAmACAMACcAKAwAKQAqDABFAEYBAAABABFqYXZhL3V0aWwvSGFzaE1hcAwATgBPBwB5DAB6AHsHAHcMAHwAfQcAfgwAfwCABwB4DACBAIIMAIMAQgEAEGphdmEvbGFuZy9TdHJpbmcMAIQAhQwAhgCHDACIAIkMAIoAPgwAiwCMAQACLCAMAI0AjgEAAT0BABNqYXZhL2xhbmcvRXhjZXB0aW9uAQA/UmVwb3J0RmlsZS9TdHJpbmdUb01hcF9NYXBJbktleS9TdHJpbmdUb01hcF9NYXBJbktleVN0cmluZ1RvTWFwAQAQamF2YS9sYW5nL09iamVjdAEADWphdmEvdXRpbC9NYXABABJqYXZhL3V0aWwvSXRlcmF0b3IBABBqYXZhL3V0aWwvQXJyYXlzAQAEc29ydAEAFihbTGphdmEvbGFuZy9PYmplY3Q7KVYBAAZrZXlTZXQBABEoKUxqYXZhL3V0aWwvU2V0OwEADWphdmEvdXRpbC9TZXQBAAhpdGVyYXRvcgEAFigpTGphdmEvdXRpbC9JdGVyYXRvcjsBAAdoYXNOZXh0AQADKClaAQAEbmV4dAEADGJpbmFyeVNlYXJjaAEAKChbTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KUkBAANnZXQBACYoTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwEAA3B1dAEAOChMamF2YS9sYW5nL09iamVjdDtMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAGbGVuZ3RoAQAJc3Vic3RyaW5nAQAWKElJKUxqYXZhL2xhbmcvU3RyaW5nOwEABXNwbGl0AQAnKExqYXZhL2xhbmcvU3RyaW5nOylbTGphdmEvbGFuZy9TdHJpbmc7ACEAHQAeAAAACAAEAB8AIAAAAAQAIQAgAAAABAAiACMAAAAEACQAIAAAAAQAJQAgAAAABAAmACAAAAAEACcAKAAAAAQAKQAqAAAAEwABACsALAABAC0AAAAdAAEAAQAAAAUqtAABsAAAAAEALgAAAAYAAQAAABAAAQAvADAAAQAtAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAuAAAACgACAAAAEwAFABQAAQAxACwAAQAtAAAAHQABAAEAAAAFKrQAArAAAAABAC4AAAAGAAEAAAAWAAEAMgAwAAEALQAAACIAAgACAAAABiortQACsQAAAAEALgAAAAoAAgAAABkABQAaAAEAMwA0AAEALQAAAB0AAQABAAAABSq0AAOwAAAAAQAuAAAABgABAAAAHAABADUANgABAC0AAAAiAAIAAgAAAAYqK7UAA7EAAAABAC4AAAAKAAIAAAAfAAUAIAABADcALAABAC0AAAAdAAEAAQAAAAUqtAAEsAAAAAEALgAAAAYAAQAAACIAAQA4ADAAAQAtAAAAIgACAAIAAAAGKiu1AASxAAAAAQAuAAAACgACAAAAJQAFACYAAQA5ACwAAQAtAAAAHQABAAEAAAAFKrQABbAAAAABAC4AAAAGAAEAAAAoAAEAOgAwAAEALQAAACIAAgACAAAABiortQAFsQAAAAEALgAAAAoAAgAAACsABQAsAAEAOwAsAAEALQAAAB0AAQABAAAABSq0AAawAAAAAQAuAAAABgABAAAALgABADwAMAABAC0AAAAiAAIAAgAAAAYqK7UABrEAAAABAC4AAAAKAAIAAAAxAAUAMgABAD0APgABAC0AAAAdAAEAAQAAAAUqtAAHrAAAAAEALgAAAAYAAQAAADQAAQA/AEAAAQAtAAAAIgACAAIAAAAGKhu1AAexAAAAAQAuAAAACgACAAAANwAFADgAAQBBAEIAAQAtAAAAHQABAAEAAAAFKrQACLAAAAABAC4AAAAGAAEAAAA6AAEAQwBEAAEALQAAACIAAgACAAAABiortQAIsQAAAAEALgAAAAoAAgAAAD0ABQA+AAEARQBGAAEALQAAAG4AAgABAAAAMiq3AAkqEgq1AAEqEgq1AAIqAbUAAyoSCrUABCoSCrUABSoSCrUABioDtQAHKgG1AAixAAAAAQAuAAAAKgAKAAAAQAAEAAcACgAIABAACQAVAAoAGwALACEADAAnAA0ALAAOADEAQQABAEcARgACAC0AAADwAAMABwAAAHm7AAtZtwAMTLsAC1m3AAxNKrQAArgADUwSCk4SCjoEAjYFKrQAA7gADiu5AA8BALkAEAEAOgYZBrkAEQEAmQA2GQa5ABIBAMAAE04qtAADLbgAFDYFFQWb/98rLbkAFQIAwAATOgQsLRkEuQAWAwBXp//GKiy1AAixAAAAAgAuAAAAQgAQAAAAUQAIAFIAEABTABgAVAAbAFUAHwBWACIAVwApAFgANgBZAEAAWgBLAFsAVQBcAFoAXQBmAF8AcwBiAHgAYwBIAAAAHQAC/wA2AAcHAEkHAEoHAEoHAEsHAEsBBwBMAAA8AE0AAAAEAAEAHAAJAE4ATwACAC0AAADvAAQACQAAAGIqBCq2ABcEZLYAGEsqEhm2ABpMuwALWbcADE0rTi2+NgQDNgUVBRUEogA4LRUFMjoGGQYSG7YAGgMyOgcZBhIbtgAaBDI6CCwZBxkIuQAWAwBXpwAIOginAAOEBQGn/8cssAABADwAUgBVABwAAgAuAAAAMgAMAAAAZgAMAGcAEwBoABsAaQAxAGoAPABtAEcAbgBSAHIAVQBwAFcAcQBaAGkAYAB0AEgAAAA7AAT/ACQABgcASwcAUAcASgcAUAEBAAD/ADAACAcASwcAUAcASgcAUAEBBwBLBwBLAAEHAFH5AAT4AAUAUgAAAAIAUwABAFQAAAACAFU=</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <mapname>
                        <xsl:value-of select="$mapele/root/mapname"/>
                    </mapname>
                    <mapvalue>
                        <xsl:value-of select="$mapele/root/mapvalue"/>
                    </mapvalue>
                    <xsl:for-each select="$Start/root/keys">
                        <keys>
                            <xsl:value-of select="."/>
                        </keys>
                    </xsl:for-each>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log">
            <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
            <pd:resourceType>ae.activities.log</pd:resourceType>
            <pd:x>210</pd:x>
            <pd:y>209</pd:y>
            <config>
                <role>User</role>
            </config>
            <pd:inputBindings>
                <ns0:ActivityInput>
                    <message>
                        <xsl:value-of select="concat($mapele/root/mapname,&quot; is escaped&quot;)"/>
                    </message>
                </ns0:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>441</pd:x>
        <pd:y>1</pd:y>
        <pd:width>404</pd:width>
        <pd:height>383</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$MapGetKey/javaCodeActivityOutput/keys</pd:over>
            <pd:iterationElementSlot>keysele</pd:iterationElementSlot>
            <pd:indexSlot>realkey</pd:indexSlot>
            <pd:outSlot>AllKeyAllMap</pd:outSlot>
            <pd:activityOutputName>SingleLine</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>PrepareConverRate</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$Start/root/groupby="n"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ParsePriceReport</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SingleLine</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParsePriceReport</pd:from>
            <pd:to>PriceMap</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ConversionRate</pd:from>
            <pd:to>OfferNLable</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>OfferNLable</pd:from>
            <pd:to>SingleLine</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>PrepareConverRate</pd:from>
            <pd:to>ConversionRate</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>PriceMap</pd:from>
            <pd:to>PrepareConverRate</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="SingleLine">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:description>$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[1]/offer</pd:description>
            <pd:x>736</pd:x>
            <pd:y>195</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="time" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="offer" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="n" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="click" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="normal" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="rm" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="dup" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="allcon" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="conver" type="xsd:double" minOccurs="0"/>
                                <xsd:element name="campaign_extendtype" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="out_price" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="offer_earningtype" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="in_price" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="allcon_converrate" type="xsd:double" minOccurs="0"/>
                                <xsd:element name="offerid" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="nid" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:if test="$Start/root/jsontime">
                        <time>
                            <xsl:value-of select="$Start/root/jsontime"/>
                        </time>
                    </xsl:if>
                    <offer>
                        <xsl:value-of select="$OfferNLable/root/offerlabel"/>
                    </offer>
                    <n>
                        <xsl:value-of select="$OfferNLable/root/nlabel"/>
                    </n>
                    <click>
                        <xsl:value-of select="$PrepareConverRate/javaCodeActivityOutput/clickv"/>
                    </click>
                    <normal>
                        <xsl:value-of select="$PrepareConverRate/javaCodeActivityOutput/normalv"/>
                    </normal>
                    <rm>
                        <xsl:value-of select="$PrepareConverRate/javaCodeActivityOutput/rmv"/>
                    </rm>
                    <dup>
                        <xsl:value-of select="$PrepareConverRate/javaCodeActivityOutput/dupv"/>
                    </dup>
                    <allcon>
                        <xsl:value-of select="$PrepareConverRate/javaCodeActivityOutput/allconv"/>
                    </allcon>
                    <conver>
                        <xsl:value-of select="if($PrepareConverRate/javaCodeActivityOutput/clickv>0) then&#xA;($ConversionRate/javaCodeActivityOutput/converrate&#xA;div&#xA;$PrepareConverRate/javaCodeActivityOutput/clickv&#xA;)&#xA;else&#xA;0"/>
                    </conver>
                    <campaign_extendtype>
                        <xsl:value-of select="tib:substring-before-last($PriceMap/javaCodeActivityOutput/vals[2],&quot;-&quot;)"/>
                    </campaign_extendtype>
                    <out_price>
                        <xsl:value-of select="tib:substring-after-last($PriceMap/javaCodeActivityOutput/vals[2],&quot;-&quot;)"/>
                    </out_price>
                    <offer_earningtype>
                        <xsl:value-of select="tib:substring-before-last($PriceMap/javaCodeActivityOutput/vals[1],&quot;-&quot;)"/>
                    </offer_earningtype>
                    <in_price>
                        <xsl:value-of select="tib:substring-after-last($PriceMap/javaCodeActivityOutput/vals[1],&quot;-&quot;)"/>
                    </in_price>
                    <allcon_converrate>
                        <xsl:value-of select="if($PrepareConverRate/javaCodeActivityOutput/clickv>0) then &#xA;$PrepareConverRate/javaCodeActivityOutput/allconv&#xA;div&#xA;$PrepareConverRate/javaCodeActivityOutput/clickv&#xA;else &#xA;0"/>
                    </allcon_converrate>
                    <offerid>
                        <xsl:value-of select="if($Start/root/groupby=&quot;offer&quot;) then&#xA;$keysele/keys&#xA;else&#xA;substring-before($keysele/keys, &quot;-&quot;)"/>
                    </offerid>
                    <nid>
                        <xsl:value-of select="if($Start/root/groupby=&quot;n&quot;) then&#xA;$keysele/keys&#xA;else&#xA;substring-after($keysele/keys, &quot;-&quot;)"/>
                    </nid>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ParsePriceReport">
            <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
            <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
            <pd:x>542</pd:x>
            <pd:y>74</pd:y>
            <config>
                <InputType>File</InputType>
                <Encoding>UTF8</Encoding>
                <SpecifyStartRecord>false</SpecifyStartRecord>
                <SkipBlankLines>false</SkipBlankLines>
                <ParseSharedConfig>/ReportFile/HourReport.sharedparse</ParseSharedConfig>
            </config>
            <pd:inputBindings>
                <Input>
                    <fileName>
                        <xsl:value-of select="concat(&#xA;tib:substring-before-last($Start/root/mergefile, &quot;\&quot;),&#xA;&quot;\report.price.log_&quot;,&#xA;$Start/root/day,&#xA;&quot;.csv&quot;&#xA;)"/>
                    </fileName>
                    <noOfRecords>
                        <xsl:value-of select="1000"/>
                    </noOfRecords>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="PriceMap">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>674</pd:x>
            <pd:y>74</pd:y>
            <config>
                <fileName>StringToMap_MapInKeyPriceMap</fileName>
                <packageName>ReportFile.StringToMap_MapInKey</packageName>
                <fullsource>package ReportFile.StringToMap_MapInKey;
import java.util.*;
import java.io.*;
@SuppressWarnings("unchecked")
public class StringToMap_MapInKeyPriceMap{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String[] mapname = null;
	protected String[] mapvalue = null;
	protected String keys = "";
	protected String[] vals = null;
	public String[] getmapname() {
		return mapname;
	}
	public void setmapname(String[] val) {
		mapname = val;
	}
	public String[] getmapvalue() {
		return mapvalue;
	}
	public void setmapvalue(String[] val) {
		mapvalue = val;
	}
	public String getkeys() {
		return keys;
	}
	public void setkeys(String val) {
		keys = val;
	}
	public String[] getvals() {
		return vals;
	}
	public void setvals(String[] val) {
		vals = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public StringToMap_MapInKeyPriceMap() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String[] mapname
	In  : String[] mapvalue
	In  : String keys
	Out : String[] vals
* Available Variables: DO NOT MODIFY *****/
vals=new String[2];
Map&lt;String, String&gt; StrMap = new HashMap&lt;String, String&gt;();
		for (int i = 0; i &lt; mapname.length; i++) {
				 StrMap = mapStringToMap(mapvalue[i]);
	vals[i]="0";
	if(StrMap.containsKey(keys)||StrMap.containsKey(keys.split("-")[0])) {
		vals[i]=StrMap.get(keys);
	}
	String keys2=keys.split("-")[0];
	if(StrMap.containsKey(keys2)) {
		vals[i]=StrMap.get(keys2);
	}
						}

}

public static Map&lt;String, String&gt; mapStringToMap(String str) {
		str = str.substring(1, str.length() - 1);
		String[] strs = str.split(", ");
		Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
		for (String string : strs) {
			String key = string.split("=")[0];
			
	        try {
				String value = string.split("=")[1];
				map.put(key, value);
				
			} catch (Exception e) {
				continue;
			}
		}
		return map;
	}

}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>mapname</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>repeating</fieldRequired>
                    </row>
                    <row>
                        <fieldName>mapvalue</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>repeating</fieldRequired>
                    </row>
                    <row>
                        <fieldName>keys</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>vals</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>repeating</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>StringToMap_MapInKeyPriceMap</name>
                        <byteCode>yv66vgAAADQAXwkAFgA7CQAWADwJABYAPQkAFgA+CgAXAD8IAEAHAEEHAEIKAAgAPwoAFgBDCABECwBFAEYIAEcKAAcASAsARQBJCgAHAEoKAAcASwgATAgATQsARQBOBwBPBwBQBwBRAQAHbWFwbmFtZQEAE1tMamF2YS9sYW5nL1N0cmluZzsBAAhtYXB2YWx1ZQEABGtleXMBABJMamF2YS9sYW5nL1N0cmluZzsBAAR2YWxzAQAKZ2V0bWFwbmFtZQEAFSgpW0xqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAApzZXRtYXBuYW1lAQAWKFtMamF2YS9sYW5nL1N0cmluZzspVgEAC2dldG1hcHZhbHVlAQALc2V0bWFwdmFsdWUBAAdnZXRrZXlzAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAdzZXRrZXlzAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAHZ2V0dmFscwEAB3NldHZhbHMBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwBSAQAKRXhjZXB0aW9ucwEADm1hcFN0cmluZ1RvTWFwAQAjKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS91dGlsL01hcDsHAEEHABkHAE8BAAlTaWduYXR1cmUBAEkoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvTWFwPExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nOz47AQAKU291cmNlRmlsZQEAIVN0cmluZ1RvTWFwX01hcEluS2V5UHJpY2VNYXAuamF2YQwAGAAZDAAaABkMABsAHAwAHQAZDAAsAC0BAAABABBqYXZhL2xhbmcvU3RyaW5nAQARamF2YS91dGlsL0hhc2hNYXAMADIAMwEAATAHAFIMAFMAVAEAAS0MAFUAVgwAVwBYDABZAFoMAFsAXAEAAiwgAQABPQwAXQBeAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAPFJlcG9ydEZpbGUvU3RyaW5nVG9NYXBfTWFwSW5LZXkvU3RyaW5nVG9NYXBfTWFwSW5LZXlQcmljZU1hcAEAEGphdmEvbGFuZy9PYmplY3QBAA1qYXZhL3V0aWwvTWFwAQALY29udGFpbnNLZXkBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoBAAVzcGxpdAEAJyhMamF2YS9sYW5nL1N0cmluZzspW0xqYXZhL2xhbmcvU3RyaW5nOwEAA2dldAEAJihMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAGbGVuZ3RoAQADKClJAQAJc3Vic3RyaW5nAQAWKElJKUxqYXZhL2xhbmcvU3RyaW5nOwEAA3B1dAEAOChMamF2YS9sYW5nL09iamVjdDtMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7ACEAFgAXAAAABAAEABgAGQAAAAQAGgAZAAAABAAbABwAAAAEAB0AGQAAAAsAAQAeAB8AAQAgAAAAHQABAAEAAAAFKrQAAbAAAAABACEAAAAGAAEAAAAMAAEAIgAjAAEAIAAAACIAAgACAAAABiortQABsQAAAAEAIQAAAAoAAgAAAA8ABQAQAAEAJAAfAAEAIAAAAB0AAQABAAAABSq0AAKwAAAAAQAhAAAABgABAAAAEgABACUAIwABACAAAAAiAAIAAgAAAAYqK7UAArEAAAABACEAAAAKAAIAAAAVAAUAFgABACYAJwABACAAAAAdAAEAAQAAAAUqtAADsAAAAAEAIQAAAAYAAQAAABgAAQAoACkAAQAgAAAAIgACAAIAAAAGKiu1AAOxAAAAAQAhAAAACgACAAAAGwAFABwAAQAqAB8AAQAgAAAAHQABAAEAAAAFKrQABLAAAAABACEAAAAGAAEAAAAeAAEAKwAjAAEAIAAAACIAAgACAAAABiortQAEsQAAAAEAIQAAAAoAAgAAACEABQAiAAEALAAtAAEAIAAAAEYAAgABAAAAGiq3AAUqAbUAASoBtQACKhIGtQADKgG1AASxAAAAAQAhAAAAGgAGAAAAJAAEAAcACQAIAA4ACQAUAAoAGQAlAAEALgAtAAIAIAAAAOcABAAEAAAAjioFvQAHtQAEuwAIWbcACUwDPRwqtAABvqIAdSq0AAIcMrgACkwqtAAEHBILUysqtAADuQAMAgCaABcrKrQAAxINtgAOAzK5AAwCAJkAFiq0AAQcKyq0AAO5AA8CAMAAB1MqtAADEg22AA4DMk4rLbkADAIAmQATKrQABBwrLbkADwIAwAAHU4QCAaf/iLEAAAACACEAAAAyAAwAAAAtAAgALgAQAC8AGwAwACUAMQAtADIATgAzAGEANQBtADYAdwA3AIcALwCNADsALwAAAA8ABf0AEgcAMAE7EiX6AAUAMQAAAAQAAQAVAAkAMgAzAAIAIAAAAO8ABAAJAAAAYioEKrYAEARktgARSyoSErYADky7AAhZtwAJTStOLb42BAM2BRUFFQSiADgtFQUyOgYZBhITtgAOAzI6BxkGEhO2AA4EMjoILBkHGQi5ABQDAFenAAg6CKcAA4QFAaf/xyywAAEAPABSAFUAFQACACEAAAAyAAwAAAA+AAwAPwATAEAAGwBBADEAQgA8AEUARwBGAFIASgBVAEgAVwBJAFoAQQBgAEwALwAAADsABP8AJAAGBwA0BwA1BwAwBwA1AQEAAP8AMAAIBwA0BwA1BwAwBwA1AQEHADQHADQAAQcANvkABPgABQA3AAAAAgA4AAEAOQAAAAIAOg==</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <xsl:for-each select="$ParsePriceReport/Output/Rows/root">
                        <mapname>
                            <xsl:value-of select="current()/mapname"/>
                        </mapname>
                    </xsl:for-each>
                    <xsl:for-each select="$ParsePriceReport/Output/Rows/root">
                        <mapvalue>
                            <xsl:value-of select="current()/mapvalue"/>
                        </mapvalue>
                    </xsl:for-each>
                    <keys>
                        <xsl:value-of select="$keysele/keys"/>
                    </keys>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ConversionRate">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>597</pd:x>
            <pd:y>305</pd:y>
            <config>
                <fileName>StringToMap_MapInKeyConversionRate</fileName>
                <packageName>ReportFile.StringToMap_MapInKey</packageName>
                <fullsource>package ReportFile.StringToMap_MapInKey;
import java.util.*;
import java.io.*;
public class StringToMap_MapInKeyConversionRate{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected int normal = 0;
	protected int rm = 0;
	protected int dup = 0;
	protected int allcon = 0;
	protected int converrate = 0;
	public int getnormal() {
		return normal;
	}
	public void setnormal(int val) {
		normal = val;
	}
	public int getrm() {
		return rm;
	}
	public void setrm(int val) {
		rm = val;
	}
	public int getdup() {
		return dup;
	}
	public void setdup(int val) {
		dup = val;
	}
	public int getallcon() {
		return allcon;
	}
	public void setallcon(int val) {
		allcon = val;
	}
	public int getconverrate() {
		return converrate;
	}
	public void setconverrate(int val) {
		converrate = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public StringToMap_MapInKeyConversionRate() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : int normal
	In  : int rm
	In  : int dup
	In  : int allcon
	Out : int converrate
* Available Variables: DO NOT MODIFY *****/

converrate=normal+rm+dup+allcon;}
}
</fullsource>
                <outputData>
                    <row>
                        <fieldName>converrate</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <inputData>
                    <row>
                        <fieldName>normal</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>rm</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>dup</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>allcon</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <byteCode>
                    <class>
                        <name>StringToMap_MapInKeyConversionRate</name>
                        <byteCode>yv66vgAAADQALQkABwAkCQAHACUJAAcAJgkABwAnCQAHACgKAAgAKQcAKgcAKwEABm5vcm1hbAEAAUkBAAJybQEAA2R1cAEABmFsbGNvbgEACmNvbnZlcnJhdGUBAAlnZXRub3JtYWwBAAMoKUkBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAJc2V0bm9ybWFsAQAEKEkpVgEABWdldHJtAQAFc2V0cm0BAAZnZXRkdXABAAZzZXRkdXABAAlnZXRhbGxjb24BAAlzZXRhbGxjb24BAA1nZXRjb252ZXJyYXRlAQANc2V0Y29udmVycmF0ZQEABjxpbml0PgEAAygpVgEABmludm9rZQEACkV4Y2VwdGlvbnMHACwBAApTb3VyY2VGaWxlAQAnU3RyaW5nVG9NYXBfTWFwSW5LZXlDb252ZXJzaW9uUmF0ZS5qYXZhDAAJAAoMAAsACgwADAAKDAANAAoMAA4ACgwAHQAeAQBCUmVwb3J0RmlsZS9TdHJpbmdUb01hcF9NYXBJbktleS9TdHJpbmdUb01hcF9NYXBJbktleUNvbnZlcnNpb25SYXRlAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvbGFuZy9FeGNlcHRpb24AIQAHAAgAAAAFAAQACQAKAAAABAALAAoAAAAEAAwACgAAAAQADQAKAAAABAAOAAoAAAAMAAEADwAQAAEAEQAAAB0AAQABAAAABSq0AAGsAAAAAQASAAAABgABAAAADAABABMAFAABABEAAAAiAAIAAgAAAAYqG7UAAbEAAAABABIAAAAKAAIAAAAPAAUAEAABABUAEAABABEAAAAdAAEAAQAAAAUqtAACrAAAAAEAEgAAAAYAAQAAABIAAQAWABQAAQARAAAAIgACAAIAAAAGKhu1AAKxAAAAAQASAAAACgACAAAAFQAFABYAAQAXABAAAQARAAAAHQABAAEAAAAFKrQAA6wAAAABABIAAAAGAAEAAAAYAAEAGAAUAAEAEQAAACIAAgACAAAABiobtQADsQAAAAEAEgAAAAoAAgAAABsABQAcAAEAGQAQAAEAEQAAAB0AAQABAAAABSq0AASsAAAAAQASAAAABgABAAAAHgABABoAFAABABEAAAAiAAIAAgAAAAYqG7UABLEAAAABABIAAAAKAAIAAAAhAAUAIgABABsAEAABABEAAAAdAAEAAQAAAAUqtAAFrAAAAAEAEgAAAAYAAQAAACQAAQAcABQAAQARAAAAIgACAAIAAAAGKhu1AAWxAAAAAQASAAAACgACAAAAJwAFACgAAQAdAB4AAQARAAAATgACAAEAAAAeKrcABioDtQABKgO1AAIqA7UAAyoDtQAEKgO1AAWxAAAAAQASAAAAHgAHAAAAKgAEAAYACQAHAA4ACAATAAkAGAAKAB0AKwABAB8AHgACABEAAAAwAAMAAQAAABgqKrQAASq0AAJgKrQAA2AqtAAEYLUABbEAAAABABIAAAAGAAEAAAA1ACAAAAAEAAEAIQABACIAAAACACM=</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <normal>
                        <xsl:value-of select="if(contains($Start/root/concolumn, &quot;normal&quot;))&#xA;then&#xA;$PrepareConverRate/javaCodeActivityOutput/normalv&#xA;else&#xA;0"/>
                    </normal>
                    <rm>
                        <xsl:value-of select="if(contains($Start/root/concolumn, &quot;rm&quot;))&#xA;then&#xA;$PrepareConverRate/javaCodeActivityOutput/rmv&#xA;else&#xA;0"/>
                    </rm>
                    <dup>
                        <xsl:value-of select="if(contains($Start/root/concolumn, &quot;dup&quot;))&#xA;then&#xA;$PrepareConverRate/javaCodeActivityOutput/dupv&#xA;else&#xA;0"/>
                    </dup>
                    <allcon>
                        <xsl:value-of select="if(contains($Start/root/concolumn, &quot;allcon&quot;))&#xA;then&#xA;$PrepareConverRate/javaCodeActivityOutput/allconv&#xA;else&#xA;0"/>
                    </allcon>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="OfferNLable">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>741</pd:x>
            <pd:y>307</pd:y>
            <config>
                <processName>/FrontJSONUI/Level3/Common_GenOfferNLabel.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <offerid>
                        <xsl:value-of select="if($Start/root/groupby=&quot;offer&quot;) then&#xA;$keysele/keys&#xA;else&#xA;substring-before($keysele/keys, &quot;-&quot;)"/>
                    </offerid>
                    <nid>
                        <xsl:value-of select="if($Start/root/groupby=&quot;n&quot;) then&#xA;$keysele/keys&#xA;else&#xA;substring-after($keysele/keys, &quot;-&quot;)"/>
                    </nid>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="PrepareConverRate">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>589</pd:x>
            <pd:y>198</pd:y>
            <config>
                <fileName>StringToMap_MapInKeyPrepareConverRate</fileName>
                <packageName>ReportFile.StringToMap_MapInKey</packageName>
                <fullsource>package ReportFile.StringToMap_MapInKey;
import java.util.*;
import java.io.*;
@SuppressWarnings("unchecked")
public class StringToMap_MapInKeyPrepareConverRate{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected Object click = null;
	protected Object normal = null;
	protected Object rm = null;
	protected Object dup = null;
	protected Object allcon = null;
	protected String key = "";
	protected int clickv = 0;
	protected int normalv = 0;
	protected int rmv = 0;
	protected int dupv = 0;
	protected int allconv = 0;
	public Object getclick() {
		return click;
	}
	public void setclick(Object val) {
		click = val;
	}
	public Object getnormal() {
		return normal;
	}
	public void setnormal(Object val) {
		normal = val;
	}
	public Object getrm() {
		return rm;
	}
	public void setrm(Object val) {
		rm = val;
	}
	public Object getdup() {
		return dup;
	}
	public void setdup(Object val) {
		dup = val;
	}
	public Object getallcon() {
		return allcon;
	}
	public void setallcon(Object val) {
		allcon = val;
	}
	public String getkey() {
		return key;
	}
	public void setkey(String val) {
		key = val;
	}
	public int getclickv() {
		return clickv;
	}
	public void setclickv(int val) {
		clickv = val;
	}
	public int getnormalv() {
		return normalv;
	}
	public void setnormalv(int val) {
		normalv = val;
	}
	public int getrmv() {
		return rmv;
	}
	public void setrmv(int val) {
		rmv = val;
	}
	public int getdupv() {
		return dupv;
	}
	public void setdupv(int val) {
		dupv = val;
	}
	public int getallconv() {
		return allconv;
	}
	public void setallconv(int val) {
		allconv = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public StringToMap_MapInKeyPrepareConverRate() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : Object click
	In  : Object normal
	In  : Object rm
	In  : Object dup
	In  : Object allcon
	In  : String key
	Out : int clickv
	Out : int normalv
	Out : int rmv
	Out : int dupv
	Out : int allconv
* Available Variables: DO NOT MODIFY *****/
clickv=GetIntKeyFromMap(click,key);
normalv=GetIntKeyFromMap(normal,key);
dupv=GetIntKeyFromMap(dup,key);
allconv=GetIntKeyFromMap(allcon,key);
}

public static int GetIntKeyFromMap(Object map,String key){
String str3="";
try{
str3=((Map&lt;String, String&gt;)map).get(key);
str3=(str3.equals("")?"0":str3);
}
catch(Exception e){
}
return Integer.parseInt(str3!=null?str3:"0");
}

}
</fullsource>
                <inputData>
                    <row>
                        <fieldName>click</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>normal</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>rm</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>dup</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>allcon</fieldName>
                        <fieldType>ObjectReference</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>key</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>clickv</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>normalv</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>rmv</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>dupv</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>allconv</fieldName>
                        <fieldType>int</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>StringToMap_MapInKeyPrepareConverRate</name>
                        <byteCode>yv66vgAAADQAbgkAFgBPCQAWAFAJABYAUQkAFgBSCQAWAFMJABYAVAkAFgBVCQAWAFYJABYAVwkAFgBYCQAWAFkKABcAWggAWwoAFgBcBwBdCwAPAF4HAF8KABEAYAgAYQcAYgoAYwBkBwBlBwBmAQAFY2xpY2sBABJMamF2YS9sYW5nL09iamVjdDsBAAZub3JtYWwBAAJybQEAA2R1cAEABmFsbGNvbgEAA2tleQEAEkxqYXZhL2xhbmcvU3RyaW5nOwEABmNsaWNrdgEAAUkBAAdub3JtYWx2AQADcm12AQAEZHVwdgEAB2FsbGNvbnYBAAhnZXRjbGljawEAFCgpTGphdmEvbGFuZy9PYmplY3Q7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACHNldGNsaWNrAQAVKExqYXZhL2xhbmcvT2JqZWN0OylWAQAJZ2V0bm9ybWFsAQAJc2V0bm9ybWFsAQAFZ2V0cm0BAAVzZXRybQEABmdldGR1cAEABnNldGR1cAEACWdldGFsbGNvbgEACXNldGFsbGNvbgEABmdldGtleQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAGc2V0a2V5AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAJZ2V0Y2xpY2t2AQADKClJAQAJc2V0Y2xpY2t2AQAEKEkpVgEACmdldG5vcm1hbHYBAApzZXRub3JtYWx2AQAGZ2V0cm12AQAGc2V0cm12AQAHZ2V0ZHVwdgEAB3NldGR1cHYBAApnZXRhbGxjb252AQAKc2V0YWxsY29udgEABjxpbml0PgEAAygpVgEABmludm9rZQEACkV4Y2VwdGlvbnMBABBHZXRJbnRLZXlGcm9tTWFwAQAnKExqYXZhL2xhbmcvT2JqZWN0O0xqYXZhL2xhbmcvU3RyaW5nOylJAQANU3RhY2tNYXBUYWJsZQcAXwcAYgEAClNvdXJjZUZpbGUBACpTdHJpbmdUb01hcF9NYXBJbktleVByZXBhcmVDb252ZXJSYXRlLmphdmEMABgAGQwAGgAZDAAbABkMABwAGQwAHQAZDAAeAB8MACAAIQwAIgAhDAAjACEMACQAIQwAJQAhDABEAEUBAAAMAEgASQEADWphdmEvdXRpbC9NYXAMAGcAaAEAEGphdmEvbGFuZy9TdHJpbmcMAGkAagEAATABABNqYXZhL2xhbmcvRXhjZXB0aW9uBwBrDABsAG0BAEVSZXBvcnRGaWxlL1N0cmluZ1RvTWFwX01hcEluS2V5L1N0cmluZ1RvTWFwX01hcEluS2V5UHJlcGFyZUNvbnZlclJhdGUBABBqYXZhL2xhbmcvT2JqZWN0AQADZ2V0AQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAAZlcXVhbHMBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoBABFqYXZhL2xhbmcvSW50ZWdlcgEACHBhcnNlSW50AQAVKExqYXZhL2xhbmcvU3RyaW5nOylJACEAFgAXAAAACwAEABgAGQAAAAQAGgAZAAAABAAbABkAAAAEABwAGQAAAAQAHQAZAAAABAAeAB8AAAAEACAAIQAAAAQAIgAhAAAABAAjACEAAAAEACQAIQAAAAQAJQAhAAAAGQABACYAJwABACgAAAAdAAEAAQAAAAUqtAABsAAAAAEAKQAAAAYAAQAAABMAAQAqACsAAQAoAAAAIgACAAIAAAAGKiu1AAGxAAAAAQApAAAACgACAAAAFgAFABcAAQAsACcAAQAoAAAAHQABAAEAAAAFKrQAArAAAAABACkAAAAGAAEAAAAZAAEALQArAAEAKAAAACIAAgACAAAABiortQACsQAAAAEAKQAAAAoAAgAAABwABQAdAAEALgAnAAEAKAAAAB0AAQABAAAABSq0AAOwAAAAAQApAAAABgABAAAAHwABAC8AKwABACgAAAAiAAIAAgAAAAYqK7UAA7EAAAABACkAAAAKAAIAAAAiAAUAIwABADAAJwABACgAAAAdAAEAAQAAAAUqtAAEsAAAAAEAKQAAAAYAAQAAACUAAQAxACsAAQAoAAAAIgACAAIAAAAGKiu1AASxAAAAAQApAAAACgACAAAAKAAFACkAAQAyACcAAQAoAAAAHQABAAEAAAAFKrQABbAAAAABACkAAAAGAAEAAAArAAEAMwArAAEAKAAAACIAAgACAAAABiortQAFsQAAAAEAKQAAAAoAAgAAAC4ABQAvAAEANAA1AAEAKAAAAB0AAQABAAAABSq0AAawAAAAAQApAAAABgABAAAAMQABADYANwABACgAAAAiAAIAAgAAAAYqK7UABrEAAAABACkAAAAKAAIAAAA0AAUANQABADgAOQABACgAAAAdAAEAAQAAAAUqtAAHrAAAAAEAKQAAAAYAAQAAADcAAQA6ADsAAQAoAAAAIgACAAIAAAAGKhu1AAexAAAAAQApAAAACgACAAAAOgAFADsAAQA8ADkAAQAoAAAAHQABAAEAAAAFKrQACKwAAAABACkAAAAGAAEAAAA9AAEAPQA7AAEAKAAAACIAAgACAAAABiobtQAIsQAAAAEAKQAAAAoAAgAAAEAABQBBAAEAPgA5AAEAKAAAAB0AAQABAAAABSq0AAmsAAAAAQApAAAABgABAAAAQwABAD8AOwABACgAAAAiAAIAAgAAAAYqG7UACbEAAAABACkAAAAKAAIAAABGAAUARwABAEAAOQABACgAAAAdAAEAAQAAAAUqtAAKrAAAAAEAKQAAAAYAAQAAAEkAAQBBADsAAQAoAAAAIgACAAIAAAAGKhu1AAqxAAAAAQApAAAACgACAAAATAAFAE0AAQBCADkAAQAoAAAAHQABAAEAAAAFKrQAC6wAAAABACkAAAAGAAEAAABPAAEAQwA7AAEAKAAAACIAAgACAAAABiobtQALsQAAAAEAKQAAAAoAAgAAAFIABQBTAAEARABFAAEAKAAAAIUAAgABAAAAPSq3AAwqAbUAASoBtQACKgG1AAMqAbUABCoBtQAFKhINtQAGKgO1AAcqA7UACCoDtQAJKgO1AAoqA7UAC7EAAAABACkAAAA2AA0AAABVAAQABwAJAAgADgAJABMACgAYAAsAHQAMACMADQAoAA4ALQAPADIAEAA3ABEAPABWAAEARgBFAAIAKAAAAGUAAwABAAAAPSoqtAABKrQABrgADrUAByoqtAACKrQABrgADrUACCoqtAAEKrQABrgADrUACioqtAAFKrQABrgADrUAC7EAAAABACkAAAAWAAUAAABlAA8AZgAeAGcALQBoADwAaQBHAAAABAABABQACQBIAEkAAQAoAAAAgwACAAQAAAAzEg1NKsAADyu5ABACAMAAEU0sEg22ABKZAAgSE6cABCxNpwAETizGAAcspwAFEhO4ABWsAAEAAwAhACQAFAACACkAAAAaAAYAAABsAAMAbgARAG8AIQByACQAcQAlAHMASgAAABYABvwAHwcAS0AHAEtDBwBMAAdBBwBLAAEATQAAAAIATg==</byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[1]/map2">
                        <click>
                            <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[1]/map2"/>
                        </click>
                    </xsl:if>
                    <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[2]/map2">
                        <normal>
                            <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[2]/map2"/>
                        </normal>
                    </xsl:if>
                    <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[3]/map2">
                        <rm>
                            <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[3]/map2"/>
                        </rm>
                    </xsl:if>
                    <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[4]/map2">
                        <dup>
                            <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[4]/map2"/>
                        </dup>
                    </xsl:if>
                    <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[5]/map2">
                        <allcon>
                            <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[5]/map2"/>
                        </allcon>
                    </xsl:if>
                    <key>
                        <xsl:value-of select="$keysele/keys"/>
                    </key>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="MapGetKey">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>378</pd:x>
        <pd:y>143</pd:y>
        <config>
            <fileName>StringToMap_MapInKeyMapGetKey</fileName>
            <packageName>ReportFile.StringToMap_MapInKey</packageName>
            <fullsource>package ReportFile.StringToMap_MapInKey;
import java.util.*;
import java.io.*;
@SuppressWarnings("unchecked")
public class StringToMap_MapInKeyMapGetKey{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected Object click = null;
	protected Object normal = null;
	protected Object rm = null;
	protected Object dup = null;
	protected Object allcon = null;
	protected String[] keys = null;
	public Object getclick() {
		return click;
	}
	public void setclick(Object val) {
		click = val;
	}
	public Object getnormal() {
		return normal;
	}
	public void setnormal(Object val) {
		normal = val;
	}
	public Object getrm() {
		return rm;
	}
	public void setrm(Object val) {
		rm = val;
	}
	public Object getdup() {
		return dup;
	}
	public void setdup(Object val) {
		dup = val;
	}
	public Object getallcon() {
		return allcon;
	}
	public void setallcon(Object val) {
		allcon = val;
	}
	public String[] getkeys() {
		return keys;
	}
	public void setkeys(String[] val) {
		keys = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public StringToMap_MapInKeyMapGetKey() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : Object click
	In  : Object normal
	In  : Object rm
	In  : Object dup
	In  : Object allcon
	Out : String[] keys
* Available Variables: DO NOT MODIFY *****/

Map&lt;String, String&gt; allkeymap = new HashMap&lt;String, String&gt;();
allkeymap.putAll((Map&lt;String, String&gt;)click);
System.out.println(" key map : "+allkeymap.toString()+" \n click : "  );
allkeymap.putAll((Map&lt;String, String&gt;)normal);
System.out.println(" key map : "+allkeymap.toString()+" \n normal : "  );
allkeymap.putAll((Map&lt;String, String&gt;)rm);
System.out.println(" key map : "+allkeymap.toString()+" \n rm : "  );
allkeymap.putAll((Map&lt;String, String&gt;)dup);
System.out.println(" key map : "+allkeymap.toString()+" \n dup : "  );
allkeymap.putAll((Map&lt;String, String&gt;)allcon);
System.out.println(" key map : "+allkeymap.toString()+" \n allcon : "  );
Set&lt;String&gt; set =allkeymap.keySet();
keys = new String[set.size()];    
        //Set--&gt;数组    
set.toArray(keys);}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>click</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>normal</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>rm</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>dup</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>allcon</fieldName>
                    <fieldType>ObjectReference</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>keys</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>repeating</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>StringToMap_MapInKeyMapGetKey</name>
                    <byteCode>yv66vgAAADQAcgkAHQBACQAdAEEJAB0AQgkAHQBDCQAdAEQJAB0ARQoAHgBGBwBHCgAIAEYHAEgLAAoASQkASgBLBwBMCgANAEYIAE0KAA0ATgoAHgBPCABQCgANAE8KAFEAUggAUwgAVAgAVQgAVgsACgBXCwBYAFkHAFoLAFgAWwcAXAcAXQEABWNsaWNrAQASTGphdmEvbGFuZy9PYmplY3Q7AQAGbm9ybWFsAQACcm0BAANkdXABAAZhbGxjb24BAARrZXlzAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEACGdldGNsaWNrAQAUKClMamF2YS9sYW5nL09iamVjdDsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAIc2V0Y2xpY2sBABUoTGphdmEvbGFuZy9PYmplY3Q7KVYBAAlnZXRub3JtYWwBAAlzZXRub3JtYWwBAAVnZXRybQEABXNldHJtAQAGZ2V0ZHVwAQAGc2V0ZHVwAQAJZ2V0YWxsY29uAQAJc2V0YWxsY29uAQAHZ2V0a2V5cwEAFSgpW0xqYXZhL2xhbmcvU3RyaW5nOwEAB3NldGtleXMBABYoW0xqYXZhL2xhbmcvU3RyaW5nOylWAQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQAKRXhjZXB0aW9ucwcAXgEAClNvdXJjZUZpbGUBACJTdHJpbmdUb01hcF9NYXBJbktleU1hcEdldEtleS5qYXZhDAAfACAMACEAIAwAIgAgDAAjACAMACQAIAwAJQAmDAA5ADoBABFqYXZhL3V0aWwvSGFzaE1hcAEADWphdmEvdXRpbC9NYXAMAF8AYAcAYQwAYgBjAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAAsga2V5IG1hcCA6IAwAZABlDABmAGcBAAsgCiBjbGljayA6IAcAaAwAaQBqAQAMIAogbm9ybWFsIDogAQAIIAogcm0gOiABAAkgCiBkdXAgOiABAAwgCiBhbGxjb24gOiAMAGsAbAcAbQwAbgBvAQAQamF2YS9sYW5nL1N0cmluZwwAcABxAQA9UmVwb3J0RmlsZS9TdHJpbmdUb01hcF9NYXBJbktleS9TdHJpbmdUb01hcF9NYXBJbktleU1hcEdldEtleQEAEGphdmEvbGFuZy9PYmplY3QBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAGcHV0QWxsAQASKExqYXZhL3V0aWwvTWFwOylWAQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAUKClMamF2YS9sYW5nL1N0cmluZzsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL1N0cmluZzspVgEABmtleVNldAEAESgpTGphdmEvdXRpbC9TZXQ7AQANamF2YS91dGlsL1NldAEABHNpemUBAAMoKUkBAAd0b0FycmF5AQAoKFtMamF2YS9sYW5nL09iamVjdDspW0xqYXZhL2xhbmcvT2JqZWN0OwAhAB0AHgAAAAYABAAfACAAAAAEACEAIAAAAAQAIgAgAAAABAAjACAAAAAEACQAIAAAAAQAJQAmAAAADgABACcAKAABACkAAAAdAAEAAQAAAAUqtAABsAAAAAEAKgAAAAYAAQAAAA4AAQArACwAAQApAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAqAAAACgACAAAAEQAFABIAAQAtACgAAQApAAAAHQABAAEAAAAFKrQAArAAAAABACoAAAAGAAEAAAAUAAEALgAsAAEAKQAAACIAAgACAAAABiortQACsQAAAAEAKgAAAAoAAgAAABcABQAYAAEALwAoAAEAKQAAAB0AAQABAAAABSq0AAOwAAAAAQAqAAAABgABAAAAGgABADAALAABACkAAAAiAAIAAgAAAAYqK7UAA7EAAAABACoAAAAKAAIAAAAdAAUAHgABADEAKAABACkAAAAdAAEAAQAAAAUqtAAEsAAAAAEAKgAAAAYAAQAAACAAAQAyACwAAQApAAAAIgACAAIAAAAGKiu1AASxAAAAAQAqAAAACgACAAAAIwAFACQAAQAzACgAAQApAAAAHQABAAEAAAAFKrQABbAAAAABACoAAAAGAAEAAAAmAAEANAAsAAEAKQAAACIAAgACAAAABiortQAFsQAAAAEAKgAAAAoAAgAAACkABQAqAAEANQA2AAEAKQAAAB0AAQABAAAABSq0AAawAAAAAQAqAAAABgABAAAALAABADcAOAABACkAAAAiAAIAAgAAAAYqK7UABrEAAAABACoAAAAKAAIAAAAvAAUAMAABADkAOgABACkAAABXAAIAAQAAACMqtwAHKgG1AAEqAbUAAioBtQADKgG1AAQqAbUABSoBtQAGsQAAAAEAKgAAACIACAAAADIABAAHAAkACAAOAAkAEwAKABgACwAdAAwAIgAzAAEAOwA6AAIAKQAAAVoAAwADAAABDrsACFm3AAlMKyq0AAHAAAq5AAsCALIADLsADVm3AA4SD7YAECu2ABG2ABASErYAELYAE7YAFCsqtAACwAAKuQALAgCyAAy7AA1ZtwAOEg+2ABArtgARtgAQEhW2ABC2ABO2ABQrKrQAA8AACrkACwIAsgAMuwANWbcADhIPtgAQK7YAEbYAEBIWtgAQtgATtgAUKyq0AATAAAq5AAsCALIADLsADVm3AA4SD7YAECu2ABG2ABASF7YAELYAE7YAFCsqtAAFwAAKuQALAgCyAAy7AA1ZtwAOEg+2ABArtgARtgAQEhi2ABC2ABO2ABQruQAZAQBNKiy5ABoBAL0AG7UABiwqtAAGuQAcAgBXsQAAAAEAKgAAADoADgAAAD4ACAA/ABUAQAA2AEEAQwBCAGQAQwBxAEQAkgBFAJ8ARgDAAEcAzQBIAO4ASQD1AEoBAgBMADwAAAAEAAEAPQABAD4AAAACAD8=</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[1]/map2">
                    <click>
                        <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[1]/map2"/>
                    </click>
                </xsl:if>
                <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[2]/map2">
                    <normal>
                        <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[2]/map2"/>
                    </normal>
                </xsl:if>
                <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[3]/map2">
                    <rm>
                        <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[3]/map2"/>
                    </rm>
                </xsl:if>
                <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[4]/map2">
                    <dup>
                        <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[4]/map2"/>
                    </dup>
                </xsl:if>
                <xsl:if test="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[5]/map2">
                    <allcon>
                        <xsl:value-of select="$alllmapperkey/AccumulatedOutput/javaCodeActivityOutput[5]/map2"/>
                    </allcon>
                </xsl:if>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseClickReport</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseClickReport</pd:from>
        <pd:to>Maps</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Maps</pd:from>
        <pd:to>MapGetKey</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapGetKey</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>